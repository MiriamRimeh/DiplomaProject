CREATE TABLE AIRPORTS (
	AirportID INT IDENTITY(1,1) PRIMARY KEY,
	AirportCode CHAR(3) UNIQUE NOT NULL,
	AirportName NVARCHAR(255) NOT NULL,
	CityName NVARCHAR(255) NOT NULL,
	CountryName NVARCHAR(255) NOT NULL,
	Timezone NVARCHAR(10) NOT NULL,
	LastModified DATETIME DEFAULT GETDATE()
);

CREATE TABLE TERMINALS (
	TerminalID INT IDENTITY(1,1) PRIMARY KEY,
	TerminalName NVARCHAR(10) NOT NULL,
	AirportID INT NOT NULL,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (AirportID) REFERENCES AIRPORTS(AirportID),
	UNIQUE (TerminalName, AirportID)
);

CREATE TABLE AIRLINES (
	AirlineID INT IDENTITY(1,1) PRIMARY KEY,
	AirlineName NVARCHAR(255) NOT NULL,
	AirlineCode CHAR(2) UNIQUE NOT NULL,
	LastModified DATETIME DEFAULT GETDATE()
);

CREATE TABLE AIRCRAFTS(
	AircraftID INT PRIMARY KEY IDENTITY(1,1),
	AirlineID INT FOREIGN KEY REFERENCES Airlines(AirlineID),
	ModelNumber NVARCHAR(50),
	RegistrationNumber NVARCHAR(50) UNIQUE,
	TotalSeats INT,
	ManufacturingYear INT
);

CREATE TABLE FLIGHTS (
	FlightID INT IDENTITY(1,1) PRIMARY KEY,
	FlightNumber NVARCHAR(20) NOT NULL,
	DepartureAirportID INT NOT NULL,
	ArrivalAirportID INT NOT NULL,
	DepartureDatetime DATETIME NOT NULL,
	ArrivalDatetime DATETIME NOT NULL,
	AirlineID INT NOT NULL,
	AircraftType NVARCHAR(50),
	TerminalID INT,
	FlightStatus CHAR(1) NOT NULL,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (DepartureAirportID) REFERENCES AIRPORTS(AirportID),
	FOREIGN KEY (ArrivalAirportID) REFERENCES AIRPORTS(AirportID),
	FOREIGN KEY (AirlineID) REFERENCES AIRLINES(AirlineID),
	FOREIGN KEY (TerminalID) REFERENCES TERMINALS(TerminalID),
	FOREIGN KEY (FlightStatus) REFERENCES FLIGHT_STATUS(FlightStatusID),
	FOREIGN KEY (AircraftID) REFERENCES AIRCRAFTS(AircraftID),
	CHECK (DepartureDatetime < ArrivalDatetime)
);

CREATE TABLE CABIN_CLASSES (
	CabinClassID INT IDENTITY(1,1) PRIMARY KEY,
	ClassName CHAR(1) NOT NULL REFERENCES CABIN_CLASSES_NAMES(FlightClassNameID),
	Description NVARCHAR(MAX),
	LastModified DATETIME DEFAULT GETDATE()
);

CREATE TABLE FLIGHT_FARES (
	FareID INT IDENTITY(1,1) PRIMARY KEY,
	FlightID INT NOT NULL,
	CabinClassID INT NOT NULL,
	BasePrice DECIMAL(10,2) NOT NULL,
	UpgradedPrice DECIMAL(10,2) NOT NULL,
	BaggageAllowance NVARCHAR(MAX),
	AvailableSeats INT,
	ValidFrom DATETIME, --trigger? that deletes flights that are not active anymore
	ValidTo DATETIME,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (FlightID) REFERENCES FLIGHTS(FlightID),
	FOREIGN KEY (CabinClassID) REFERENCES CABIN_CLASSES(CabinClassID),
	CHECK (BasePrice >= 0)
);

CREATE TABLE USERS (
	UserID INT IDENTITY(1,1) PRIMARY KEY,
	FirstName NVARCHAR(255) NOT NULL,
	LastName NVARCHAR(255) NOT NULL,
	Email NVARCHAR(255) UNIQUE NOT NULL,
	PasswordHash NVARCHAR(255) NOT NULL,
	LastModified DATETIME DEFAULT GETDATE()
);

CREATE TABLE USER_PREFERENCES (
	PreferenceID INT IDENTITY(1,1) PRIMARY KEY,
	UserID INT NOT NULL,
	PreferredAirlineID INT,
	PreferredClassID INT,
	FoodPreferences NVARCHAR(MAX),
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (UserID) REFERENCES USERS(UserID),
	FOREIGN KEY (PreferredAirlineID) REFERENCES AIRLINES(AirlineID),
	FOREIGN KEY (PreferredClassID) REFERENCES CABIN_CLASSES(CabinClassID),
	UNIQUE (UserID, PreferredAirlineID, PreferredClassID)
);

CREATE TABLE BOOKINGS (
	BookingID INT IDENTITY(1,1) PRIMARY KEY,
	UserID INT NOT NULL,
	BookingDate DATETIME NOT NULL,
	TotalPrice DECIMAL(10,2) NOT NULL,
	BookingStatus CHAR(1) NOT NULL,
	PaymentStatus NVARCHAR(50), -- TODO: Table with payment statuses
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (UserID) REFERENCES USERS(UserID),
	FOREIGN KEY (BookingStatus) REFERENCES BOOKING_STATUS(BookingStatusID),
	FOREIGN KEY (PaymentStatus) REFERENCES PAYMENT_STATUS(PaymentStatusID)
);

CREATE TABLE BOOKING_DETAILS (
	BookingDetailID INT IDENTITY(1,1) PRIMARY KEY,
	BookingID INT NOT NULL,
	FlightID INT NOT NULL,
	FareID INT NOT NULL,
	BoardingPassID INT NOT NULL,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (BookingID) REFERENCES BOOKINGS(BookingID),
	FOREIGN KEY (FlightID) REFERENCES FLIGHTS(FlightID),
	FOREIGN KEY (FareID) REFERENCES FLIGHT_FARES(FareID),
	FOREIGN KEY (BoardingPassID) REFERENCES BOARDING_PASSES(BoardingPassID)
);

CREATE TABLE PASSENGERS (
	PassengerID INT IDENTITY(1,1) PRIMARY KEY,
	BookingID INT NOT NULL,
	FirstName NVARCHAR(255) NOT NULL,
	LastName NVARCHAR(255) NOT NULL,
	Birthdate DATE NOT NULL,
	PassportNumber NVARCHAR(50) NOT NULL,
	PassportExpiryDate DATE NOT NULL,
	Citizenship NVARCHAR(50) NOT NULL,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (BookingID) REFERENCES BOOKINGS(BookingID),
	UNIQUE (PassportNumber)
);

CREATE TABLE BOARDING_PASSES (
	BoardingPassID INT IDENTITY(1,1) PRIMARY KEY,
	FlightID INT NOT NULL,
	CabinClassID INT NOT NULL,
	SeatNumber NVARCHAR(3) NOT NULL,
	LastModified DATETIME DEFAULT GETDATE(),
	FOREIGN KEY (FlightID) REFERENCES FLIGHTS(FlightID),
	FOREIGN KEY (CabinClassID) REFERENCES CABIN_CLASSES(CabinClassID),
	UNIQUE (FlightID, SeatNumber)
);

CREATE TABLE FLIGHT_STATUS (
	FlightStatusID CHAR(1) PRIMARY KEY,
	Status NVARCHAR(50) NOT NULL
);

CREATE TABLE BOOKING_STATUS (
	BookingStatusID CHAR(1) PRIMARY KEY,
	Status NVARCHAR(50) NOT NULL
);

CREATE TABLE CABIN_CLASSES_NAMES (
	FlightClassNameID CHAR(1) PRIMARY KEY,
	Status NVARCHAR(50) NOT NULL
);

CREATE TABLE PAYMENT_STATUS_NAMES (
	PaymentStatusNameID CHAR(1)	PRIMARY KEY,
	Status NVARCHAR(50) NOT NULL
);